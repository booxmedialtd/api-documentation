swagger: "2.0"
info:
  description: |
    A user is a physical person consuming the services offered by Move.
    In the future we may introduce the concept of an Account where One Account Has Many User, but currently there is no distinction between User and Account
    Users may be subscribers or guests.
  version: "1.0.0"
  title: "User administration endpoints"
host: "demo.aminocom.com"
basePath: "/api/users/v1/"
tags:
- name: "Users"
  description: ""
schemes:
- "https"
paths:

  /users:
    get:
      summary: "Get an index of Users"
      tags:
      - "Users"
      operationId: "GetUserIndex"
      produces:
      - "application/json"
      parameters:
      - in: query
        name: page_number
        type: integer
        required: false
        description: "The page number (100 results per page) of results to retrieve.  If this parameter is ommitted then it is assumed to be 1 (not zero based, 1 means the first page)"
      - in: query
        name: registration_status
        type: string
        required: false
        description: "An optional parameter to filter by a particular registration state.  By default all users will be returned."
      - in: query
        name: included
        required: false
        description: "The page number (100 results per page) of results to retrieve.  If this parameter is ommitted then it is assumed to be 1 (not zero based, 1 means the first page)"
        schema:
          type: integer
          format: int64

      responses:
        200:
          description: "Successful response"
          schema:
            type: "object"
            required:
            - data
            properties:
              data:
                type: array
                items:
                  type: object
                  required:
                  - type
                  - id
                  properties:
                    type:
                      type: string
                      example: User
                    id:
                      type: string
                      description: "The id of the entity being referenced"
                      example: "e07a7130-4048-4a5f-bfa4-7adc5a5e860e"
                    attributes:
                      $ref: "https://raw.githubusercontent.com/booxmedialtd/api-documentation/master/v1/snippets/Config/UserEntity.yml#UserEntity"
              included:
                    type: array
                    description: "This key MUST NOT be included if the `included` parameter is not used in the request URL"
                    items:
                      type: object
                      description: "Note that different sorts of entity may be included (this array is not guaranteed to be homogenous), but the Swagger definition does not allow including more than one example of an item of an array so only one type is shown."
                      properties:
                        type:
                          type: string
                          example: "Program"
                          description: The type of the entity that is being included.  It will always be one of [Product|License] in this endpoint.
                        id:
                          type: string
                          example: "5f596672-2796-4f86-b608-9295fa111916"
                        attributes:
                            $ref: "https://raw.githubusercontent.com/booxmedialtd/api-documentation/master/v1/snippets/EnrichedMetadata/ProductEntity.yml#ProductEntity"