openapi: 3.0.0
info:
  description: >
    This endpoint provides metadata about Channels.

    A channel is a source of content in the form of stream or signal, which can be watched / listened on a multimedia device.
    A channel is one of the elements that users can subscribe to.
    One Channel can be related to many BroadcastSlots which are placeholders in which a Program can be displayed.
    Channels have a lifetime which we refer to as "visibility".  Outside of this window the channel may not be watched.
    Although conceptually we could create a channel that holds a single program (for example a live event) this is not done in practice.
  version: 1.0.0
  title: Channel metadata
tags:
  - name: Channels
    description: |
      A channel is a source of content in the form of stream or signal, which can be watched / listened on a multimedia device.
      A channel is one of the elements that users can subscribe to.
      One Channel can be related to many BroadcastSlots which are placeholders in which a Program can be displayed.
      Channels have a lifetime which we refer to as "visibility".  Outside of this window the channel may not be watched.
      Although conceptually we could create a channel that holds a single program (for example a live event) this is not done in practice.
servers:
  - url: 'https://demo.aminocom.com/api/metadata/v1/'
components:
  securitySchemes:
    bearerAuth:            # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT    # optional, arbitrary value for documentation purposes
security:
  - bearerAuth: []         # use the same name as above
paths:

# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------

  /channels:
    get:
      summary: >-
        Get an index of Channels.
        NOTE:  This endpoint will *always* include Genre and Product relationships and DOES NOT support the `included` parameter.
      tags:
      - Channels
      operationId: GetChannelIndex
      parameters:
        - in: query
          name: language
          required: false
          description: >-
            The PK of the language to use, which will be a 3 character ISO 639-2 string (e.g.: fin).
            If this is omitted the browser 'Accept-Language' will be used if it is available, and otherwise the system defined default.
            If the requested language is not available then the system will return translations in order of the system defined preferences"
          schema:
            type: string
        - in: query
          name: include
          required: false
          description: >-
            See http://jsonapi.org/format/#fetching-includes
          schema:
            type: string
        - in: query
          name: page_number
          required: false
          description: "The page number (100 results per page) of results to retrieve.  If this parameter is ommitted then it is assumed to be 1 (not zero based, 1 means the first page)"
          schema:
            type: integer
            format: int64
        - in: query
          name: sort
          required: false
          description: >-
            Please see www.jsonapi.org/format/#fetching-sorting.  The following are attributes to sort on [channel.title].  The default sort order is by channel.title ascending
          schema:
            type: string
        - in: query
          name: filter
          required: false
          description: >-
            Please see http://jsonapi.org/recommendations/#filtering
            The following are attributes to filter on: [content_rating.adult|genre.name|program.release_year]
          schema:
            type: string
      responses:
        '200':
          description: "Successful response"
          content:
            application/json:
              schema:
                type: object
                required:
                - data
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      required:
                      - type
                      - id
                      properties:
                        type:
                          type: string
                          example: Channel
                        id:
                          type: string
                          description: "The id of the entity being referenced"
                          example: "89e3a147-2ff6-448f-959f-a6200434259d"
                        attributes:
                          $ref: "https://raw.githubusercontent.com/booxmedialtd/api-documentation/master/v1/snippets/EnrichedMetadata/ChannelEntity.yml#ChannelEntity"
                  included:
                    type: array
                    description: "This key MUST NOT be included if the `included` parameter is not used in the request URL"
                    items:
                      anyOf:
                        - type: object
                          description: "Note that different sorts of entity may be included (this array is not guaranteed to be homogenous), but the Swagger definition does not allow including more than one example of an item of an array so only one type is shown."
                          properties:
                            type:
                              type: string
                              example: "Product"
                              description: The type of the entity that is being included.
                            id:
                              type: string
                              example: "73079cf6-2b82-4ad1-8e45-727caf84298b"
                            attributes:
                                $ref: "https://raw.githubusercontent.com/booxmedialtd/api-documentation/master/v1/snippets/Subscription/ProductEntity.yml#ProductEntity"
                        - type: object
                          description: "Note that different sorts of entity may be included (this array is not guaranteed to be homogenous), but the Swagger definition does not allow including more than one example of an item of an array so only one type is shown."
                          properties:
                            type:
                              type: string
                              example: "Genre"
                              description: The type of the entity that is being included.
                            id:
                              type: string
                              example: "8958c820-1757-4f58-96d6-6e365729224c"
                            attributes:
                                $ref: "https://raw.githubusercontent.com/booxmedialtd/api-documentation/master/v1/snippets/EnrichedMetadata/GenreEntity.yml#GenreEntity"
        '400':
          description: Standard error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: "https://raw.githubusercontent.com/booxmedialtd/api-documentation/master/v1/snippets/General/ErrorEntity.yml#/Error"
