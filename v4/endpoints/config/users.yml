openapi: 3.0.0
info:
  description: >-
    A user is a physical person consuming the services offered by Move.
    In the future we may introduce the concept of an Account where One Account Has Many User, but currently there is no distinction between User and Account
    Users may be subscribers or guests.
  version: "1.0.0"
  title: "Users"
tags:
- name: Users
  description: >-
    A user is a physical person consuming the services offered by Move.
- name: Market Segmentation
  description: >-
    Market segmentation allows us to flexibly group users together by shared characteristics in order to provide services
    that are more relevant to them.
servers:
- url: 'https://demo.aminocom.com/api/users/v1/'
components:
  securitySchemes:
    bearerAuth:            # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT    # optional, arbitrary value for documentation purposes
security:
- bearerAuth: []         # use the same name as above
paths:

# ------------------------------------------------------------------------------------------------------------------------------------

  /users:
    get:
      tags:
      - Users
      summary: Get an index of Users.
      operationId: indexUsers
      parameters:
        - in: query
          name: page_number
          required: false
          description: "The page number (100 results per page) of results to retrieve.  If this parameter is ommitted then it is assumed to be 1 (not zero based, 1 means the first page)"
          schema:
            type: integer
        - in: query
          name: registration_status
          required: false
          description: "An optional parameter to filter by a particular registration state.  By default all users will be returned."
          schema:
            type: string

      responses:
        200:
          description: "Successful response"
          content:
            application/json:
              schema:
                type: "object"
                required:
                - data
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      required:
                      - type
                      - id
                      properties:
                        type:
                          type: string
                          example: User
                        id:
                          type: string
                          description: "The id of the entity being referenced"
                          example: "e07a7130-4048-4a5f-bfa4-7adc5a5e860e"
                        attributes:
                          $ref: "https://raw.githubusercontent.com/booxmedialtd/api-documentation/master/v4/snippets/Config/UserEntity.yml#/UserEntity"

    post:
      tags:
      - Users
      summary: Create a user
      operationId: createUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "https://raw.githubusercontent.com/booxmedialtd/api-documentation/master/v4/snippets/Config/UserEntity.yml#/UserEntity"
      responses:
        '201':
          description: |
            Successful response.
          headers:
            Set-Cookie:
              schema:
                type: string
              description: "Session cookie"
          content:
            text/plain:
              schema:
                type: string
                example: CREATED
                description: |
                  Clients are advised NOT to use the body of the response to determine success or failure, but SHOULD rather
                  rely on the HTTP status code being 201 to indicate success.

# ------------------------------------------------------------------------------------------------------------------------------------

  /users/{user_id}:
    get:
      tags:
      - Users
      summary: Get the details for a particular user
      operationId: getUser
      parameters:
        - in: query
          name: included
          required: false
          description: "See http://jsonapi.org/format/#fetching-includes"
          schema:
            type: integer
            format: int64
        - in: path
          name: user_id
          required: true
          description: The user identity (please do not use an email address to identify the user)
          schema:
            type: string
      responses:
        200:
          description: "Successful response"
          content:
            application/json:
              schema:
                type: "object"
                required:
                - data
                properties:
                  type:
                    type: string
                    example: User
                  id:
                    type: string
                    description: "The id of the entity being referenced"
                    example: "e07a7130-4048-4a5f-bfa4-7adc5a5e860e"
                  attributes:
                    $ref: "https://raw.githubusercontent.com/booxmedialtd/api-documentation/master/v4/snippets/Config/UserEntity.yml#/UserEntity"
                  included:
                    type: array
                    description: "This key MUST NOT be included if the `included` parameter is not used in the request URL"
                    items:
                      anyOf:
                      - type: object
                        description: "Note that different sorts of entity may be included (this array is not guaranteed to be homogenous), but the Swagger definition does not allow including more than one example of an item of an array so only one type is shown."
                        properties:
                          type:
                            type: string
                            example:  Product
                            description: The type of the entity that is being included.  It will always be one of [Product|License] in this endpoint.
                          id:
                            type: string
                            example: "5f596672-2796-4f86-b608-9295fa111916"
                          attributes:
                            $ref: "https://raw.githubusercontent.com/booxmedialtd/api-documentation/master/v4/snippets/Config/ProductEntity.yml#/ProductEntity"
                      - type: object
                        description: "Note that different sorts of entity may be included (this array is not guaranteed to be homogenous), but the Swagger definition does not allow including more than one example of an item of an array so only one type is shown."
                        properties:
                          type:
                            type: string
                            example:  License
                            description: The type of the entity that is being included.  It will always be one of [Product|License] in this endpoint.
                          id:
                            type: string
                            example: "0adc0dbe-3c65-4248-896c-78c049e276c8"
                          attributes:
                            $ref: "https://raw.githubusercontent.com/booxmedialtd/api-documentation/master/v4/snippets/Config/LicenseEntity.yml#/LicenseEntity"



# ------------------------------------------------------------------------

  /users/{user_id}/market_segments:
    get:
      tags:
      - Market Segmentation
      summary: Get the market segments for a particular user
      operationId: getUserMarketSegments
      parameters:
        - in: path
          name: user_id
          required: true
          description: The user identity (please do not use an email address to identify the user)
          schema:
            type: string
      responses:
        200:
          description: "Successful response"
          content:
            application/json:
              schema:
                type: "object"
                required:
                - data
                properties:
                  type:
                    type: string
                    example: MarketSegment
                  id:
                    type: string
                    description: "The id of the entity being referenced"
                    example: "bab838b3-def8-4bff-87ed-66e663134f50"
                  attributes:
                    $ref: "https://raw.githubusercontent.com/booxmedialtd/api-documentation/master/v4/snippets/Config/MarketSegment.yml#/MarketSegment"

