openapi: 3.0.0
info:
  version: "2.0.0"
  title: "Profile recording"
tags:
- name: Recordings
  description: >-
    A recording represents a broadcast slot that the user wants to have recorded.
    A Recording may or may not be available for viewing, depending of whether the broadcast slot has been successfully recorded.
- name: Automated Recording Requests
  description: >-
    An Automated Recording Request represents a request by a user to automatically record specific broadcast slots for them as they become available.
- name: Recording Groups
  description: >-
    Recording Groups are groups of Recordings available for viewing, typically a Series.
servers:
- url: 'https://demo.aminocom.com/api/recordings/v2/'
components:
  securitySchemes:
    bearerAuth:            # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT    # optional, arbitrary value for documentation purposes
security:
- bearerAuth: []         # use the same name as above

paths:
# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# RECORDINGS
# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

  /user_profiles/{user_profile_id}/recordings:
    post:
      description: |
        * **Available since:** 2019-11 (BPLAT-12079)
      summary: Create a recording of a given broadcast slot for a given user profile
      tags:
        - Recordings
      operationId: createRecordedSlot
      parameters:
        - in: path
          name: user_profile_id
          required: true
          description: The identity of the user profile to create recording groups for.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "https://raw.githubusercontent.com/booxmedialtd/api-documentation/master/rest/snippets/UserRecordings/RecordingEntity.yml#/CreateRecordingRequestEntity"

      responses:
        201:
          description: "Successful response on created resource"
          content:
            application/json:
              schema:
                $ref: "https://raw.githubusercontent.com/booxmedialtd/api-documentation/master/rest/snippets/UserRecordings/RecordingEntity.yml#/RecordingEntity"

        403:
          description: |
            Recording was rejected. Possible reasons include:
            - Requested broadcast slot is not recordable
            - Requested channel is not recordable
            - User lacks sufficient license to record requested broadcast slot
            - User lacks sufficient storage space to record requested broadcast slot
          content:
            application/json:
              schema:
                $ref: "https://raw.githubusercontent.com/booxmedialtd/api-documentation/master/rest/snippets/General/JsonApiErrorEntity.yml#/JsonApiErrorEntity"
              example:
                errors:
                  - id: "934dc960-a733-409f-a000-c112b64c8553"
                    status: "403"
                    code: "30302"
                    title: "Forbidden"
                    detail: "Broadcast slot with ID \"97e2dd12-01fd-11ea-b90b-a310cb9651f4\" is not recordable"

# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

  /user_profiles/{user_profile_id}/recordings/{recording_id}:
    patch:
      description: |
        * **Available since:** NOT YET AVAILABLE
      tags:
      - Recordings
      summary: # TODO
      operationId: updateRecordedSlot
      # TODO

    delete:
      tags:
      - Recordings
      summary: Delete one given recording for a given user profile.
      description: |
        * **Available since:** 2019-11 (BPLAT-12081)
      operationId: deleteRecordedSlot
      parameters:
        - in: path
          name: user_profile_id
          required: true
          description: The identity of the user profile to delete a recording for (UUID).
          schema:
            type: string
        - in: path
          name: recording_id
          required: true
          description: The identity of the recording to delete (UUID).
          schema:
            type: string
      responses:
        204:
          description: The recording was successfully deleted. No response body returned.

  /user_profiles/{user_profile_id}/recordings/batch_delete_recordings:
    post:
      description: |
        * **Available since:** 2019-11 (BPLAT-12082)
      tags:
        - Recordings
      summary: Delete all given recordings for the given profile, up to a maximum of 50 recordings.
      operationId: batchDeleteRecordedSlots
      parameters:
        - in: path
          name: user_profile_id
          required: true
          description: The identity of the user profile to delete the recordings for (UUID).
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/vnd.api+json; ext=bulk:
            schema:
              $ref: "https://raw.githubusercontent.com/booxmedialtd/api-documentation/master/rest/snippets/UserRecordings/RecordingEntity.yml#/BatchDeleteRequestEntity"
      responses:
        204:
          description: The recordings were successfully deleted. No response body returned.
        404:
          description: At least one of the recordings was not found under the given user profile. None of the recordings was deleted.
          content:
            application/json:
              schema:
                $ref: "https://raw.githubusercontent.com/booxmedialtd/api-documentation/master/rest/snippets/General/JsonApiErrorEntity.yml#/JsonApiErrorEntity"
              example:
                errors:
                  - id: "934dc960-a733-409f-a000-c112b64c8553"
                    status: "404"
                    code: "30302"
                    title: "Not Found"
                    detail: "Broadcast slot with ID \"97e2dd12-01fd-11ea-b90b-a310cb9651f4\" is not recordable"
        400:
          description: |
            A requirement for the request was not met. None of the recordings should be deleted. Possible reasons include:
             - The list of recordings to delete is missing
             - The list of recordings to delete is empty
             - The list of recordings to delete contains more than 50 id's
          content:
            application/json:
              schema:
                $ref: "https://raw.githubusercontent.com/booxmedialtd/api-documentation/master/rest/snippets/General/JsonApiErrorEntity.yml#/JsonApiErrorEntity"
              example:
                errors:
                  - id: "934dc960-a733-409f-a000-c112b64c8553"
                    status: "400"
                    code: "3231"
                    title: "Bad Request"
                    detail: "The number of recordings that is requested to be deleted exceeds the limit of 50"
        500:
           description: |
             Something went wrong while trying to delete the recordings. None of the recordings should be deleted.
           content:
             application/json:
               schema:
                 $ref: "https://raw.githubusercontent.com/booxmedialtd/api-documentation/master/rest/snippets/General/JsonApiErrorEntity.yml#/JsonApiErrorEntity"
               example:
                 errors:
                   - id: "934dc960-a733-409f-a000-c112b64c8553"
                     status: "500"
                     code: "30302"
                     title: "Internal Server Error"
                     detail: "Something went wrong while trying to delete the recordings."



# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# AUTOMATED RECORDING REQUESTS
# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

  /user_profiles/{user_profile_id}/auto_recording_requests:
    get:
      description: |
        * **Available since:** NOT YET AVAILABLE
      summary: # TODO
      tags:
        - Automated Recording Requests
      operationId: indexRecordingRequests
      # TODO

    post:
      description: |
        * **Available since:** NOT YET AVAILABLE
      summary: # TODO
      tags:
        - Automated Recording Requests
      operationId: createRecordingRequests
      # TODO

# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

  /user_profiles/{user_profile_id}/auto_recording_requests/{recording_request_id}:
    patch:
      description: |
        * **Available since:** NOT YET AVAILABLE
      summary: # TODO
      tags:
        - Automated Recording Requests
      operationId: updateRecordingRequests
      # TODO

    delete:
      description: |
        * **Available since:** NOT YET AVAILABLE
      summary: # TODO
      tags:
        - Automated Recording Requests
      operationId: deleteRecordingRequests
      # TODO

# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# RECORDING GROUPS
# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

  /user_profiles/{user_profile_id}/recordings/recording_groups:
    get:
      description: |
        * **Available since:** 2019-11 (BPLAT-12048)
      summary: An index of all of the recording groups for a specific user profile
      tags:
        - Recording Groups
      operationId: indexRecordingGroups
      parameters:
        - in: path
          name: user_profile_id
          required: true
          description: The identity of the user profile to fetch recording groups for.
          schema:
            type: string
        - in: query
          name: page_number
          required: false
          description: Page number if the results have more items than ipp. Default = 1
          schema:
            type: integer
        - in: query
          name: language
          description: >-
            The PK of the language to use, which will be a 3 character ISO 639-2 string (e.g.: fin).
            If this is omitted the system defined default will be used. If the requested language is not available
            then the system will return translations in order of the system defined preferences
          required: false
          schema:
            type: string

      responses:
        200:
          description: "Successful response"
          content:
            application/json:
              schema:
                type: "object"
                required:
                - data
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      required:
                      - type
                      - id
                      properties:
                        type:
                          type: array
                          example: RecordingGroup
                        id:
                          type: string
                          description: "The id of the entity being referenced"
                          example: "84eb61a9-75d4-42c7-8c15-84c3d7776227"
                        attributes:
                          $ref: "https://raw.githubusercontent.com/booxmedialtd/api-documentation/master/rest/snippets/UserRecordings/RecordingGroupEntity.yml#/RecordingGroupEntity"

# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

  /user_profiles/{user_profile_id}/recordings/recording_groups/{recording_group_id}/recordings:
    get:
      description: |
        * **Available since:** 2019-11 (BPLAT-10674)
      summary: An index of the recordings for a specific recording group
      tags:
        - Recording Groups
      operationId: getRecordingsForGroup
      parameters:
        - in: path
          name: user_profile_id
          required: true
          description: The identity of the user profile to fetch recording groups for.
          schema:
            type: string
        - in: path
          name: recording_group_id
          required: true
          description: The identity of the recording group to fetch recordings for.
          schema:
            type: string
        - in: query
          name: page_number
          required: false
          description: Page number if the results have more items than ipp. Default = 1
          schema:
            type: integer
      responses:
        200:
          description: "Successful response"
          content:
            application/json:
              schema:
                type: "object"
                required:
                - data
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      required:
                      - type
                      - id
                      properties:
                        type:
                          type: array
                          example: Recording
                        id:
                          type: string
                          description: "The id of the entity being referenced"
                          example: "84eb61a9-75d4-42c7-8c15-84c3d7776227"
                        attributes:
                          $ref: "https://raw.githubusercontent.com/booxmedialtd/api-documentation/master/rest/snippets/UserRecordings/UserRecordingEntity.yml#/UserRecordingEntity"

# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

  /user_profiles/{user_profile_id}/recordings/recording_groups/ungrouped/recordings:
    get:
      description: |
        * **Available since:** NOT YET AVAILABLE
      summary: # TODO
      tags:
        - Recording Groups
      operationId: indexUngroupedRecordingGroupRecordings
      # TODO
