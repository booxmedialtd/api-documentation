openapi: 3.0.0
info:
  description: >-
    A BroadcastSlot is a time period on a Channel in which a Program may be shown.
    Our BroadcastSlot entity is just a single appearance of a Program on a Channel.
    We store information about the time slot as well as a title for the slot.
    Note: The title of a BroadcastSlot does not have to be the same as the title of the Program in that slot.
    In English a schedule is understood to be a list or a plan and so we avoid using that word for a single item.
  version: 1.0.0
  title: BroadcastSlot metadata
tags:
- name: BroadcastSlots
  description: >-
    A BroadcastSlot is a time period on a Channel in which a Program may be shown.
    Our BroadcastSlot entity is just a single appearance of a Program on a Channel.
    We store information about the time slot as well as a title for the slot.
    Note: The title of a BroadcastSlot does not have to be the same as the title of the Program in that slot.
    In English a schedule is understood to be a list or a plan and so we avoid using that word for a single item.
servers:
- url: 'https://demo.aminocom.com/api/metadata/v1/'
components:
  securitySchemes:
    bearerAuth:            # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT    # optional, arbitrary value for documentation purposes
security:
- bearerAuth: []         # use the same name as above
paths:

# ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


  /broadcast_slots:
    get:
      summary: Get an index of BroadcastSlots
      description:  |
        * ```Available since:``` NOT YET AVAILABLE
        * We do not support including related resources in the index view.
      tags:
      - BroadcastSlots
      operationId: GetBroadcastSlotsIndex
      parameters:
        - in: query
          name: language
          required: false
          description: >-
            The PK of the language to use, which will be a 3 character ISO 639-2 string (e.g.: fin).
            If this is omitted the browser 'Accept-Language' will be used if it is available, and otherwise the system defined default.
            If the requested language is not available then the system will return translations in order of the system defined preferences
          schema:
            type: string
        - in: query
          name: start_date_yyyymmdd
          required: true
          example: 20190623
          description: >-
            You will receive a window of EPG data that begins with this date and extends for the number of days supplied in the "days_to_return"
            parameter.  Note that the API will return results starting from 00:00:01 on this date and we do not support specifying time
          schema:
            type: string
        - in: query
          name: days_to_return
          required: false
          description: >-
            How many days of data to return in the response.
            Only [1,3,7] are acceptable values, using any other value will result in a 400 error being returned.
            Default: 7
          schema:
            type: integer
            enum: [1,3,7]
        - in: query
          name: filter
          required: true
          schema:
            type: string
          description: >-
            See https://jsonapi.org/recommendations/#filtering
            This endpoint only supports filtering on [channel.id|program.genre.id] and supports multiple values through csv.
            It is compulsory to include at least the channel.id filter.  A maximum of 50 channels may be requested and
            spcifying more than this will result in the API returning a "400 Bad Request" error.
      responses:
        200:
          description: "Successful response"
          content:
            application/json:
              schema:
                type: "object"
                required:
                - data
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      required:
                      - type
                      - id
                      properties:
                        type:
                          type: string
                          example: BroadcastSlot
                        id:
                          type: string
                          description: "The id of the entity being referenced"
                          example: "f50a8a6b-e96a-4eb7-8d87-a14c1a991b96"
                        attributes:
                          $ref: "https://raw.githubusercontent.com/booxmedialtd/api-documentation/master/rest/snippets/Schedule/BroadcastSlotEntity.yml#/BroadcastSlotEntity"

        400:
          description: Standard error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: "https://raw.githubusercontent.com/booxmedialtd/api-documentation/master/rest/snippets/General/ErrorEntity.yml#/Error"

