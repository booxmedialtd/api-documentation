openapi: 3.0.0
info:
  description: >-
    This endpoint provides metadata about Programs.

    A program is something that can be shown.
    It could be an Episode of a television show (like "Friends") or a movie (like "Die Hard") that appears on a Channel at a given time in a BroadcastSlot.
    It could equally be a VOD item that can be played on demand.
    The entity "Program" is a hook into the metadata system and does not include any information about when (or how) the thing can be played.  It's just information about what can be played.
  version: 1.0.0
  title: Program metadata
tags:
  - name: Programs
    description: >-
      A program is something that can be shown.
      It could be an Episode of a television show (like "Friends") or a movie (like "Die Hard") that appears on a Channel at a given time in a BroadcastSlot.
      It could equally be a VOD item that can be played on demand.
      The entity "Program" is a hook into the metadata system and does not include any information about when (or how) the thing can be played.  It's just information about what can be played.
  - name: BroadcastSlots
    description: >-
      A BroadcastSlot is a time period on a Channel in which a Program may be shown.
      Our BroadcastSlot entity is just a single appearance of a Program on a Channel.
      We store information about the time slot as well as a title for the slot.
      Note: The title of a BroadcastSlot does not have to be the same as the title of the Program in that slot.
      In English a schedule is understood to be a list or a plan and so we avoid using that word for a single item.
servers:
  - url: 'https://demo.aminocom.com/api/metadata/v1/'
components:
  securitySchemes:
    bearerAuth:            # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT    # optional, arbitrary value for documentation purposes
security:
  - bearerAuth: []         # use the same name as above
paths:

# ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

  /programs:
      get:
        summary: >
          Get an index of programs.
          By default you should return this list sorted by release_year descending and force pagination (100 results per page).
          NOTE:  there is a Swagger limitation that includes the `series` relationship into the entities, ignore this for this endpoint.
        description: |
          * **Available since:** 2019-06 (BPLAT-4173)
        tags:
        - Programs
        operationId: GetProgramIndex
        parameters:
          - in: query
            name: language
            required: false
            description: >-
              The PK of the language to use, which will be a 3 character ISO 639-2 string (e.g.: fin).
              If this is omitted the system defined default will be used.
              If the requested language is not available then the system will return translations in order of the system defined preferences
            schema:
              type: string
          - in: query
            name: page
            required: false
            description: Please see https://jsonapi.org/profiles/ethanresnick/cursor-pagination. Only page number is supported at the moment. Ex. page[number]=1. Default = 1
            schema:
              type: integer
          - in: query
            name: sort
            required: false
            description: >-
              Please see http://jsonapi.org/format/#fetching-sorting
              The following are attributes to sort on: [program.title|program.release_year]
            schema:
              type: string
          - in: query
            name: filter
            required: false
            description: >-
              Please see http://jsonapi.org/recommendations/#filtering
              The following are attributes to filter on: [genre.id|series.id]
            schema:
              type: string

        responses:
          '200':
            description: "Successful response"
            content:
              application/json:
                schema:
                  type: "object"
                  required:
                  - data
                  properties:
                    data:
                      type: array
                      items:
                        type: object
                        required:
                        - type
                        - id
                        properties:
                          type:
                            type: string
                            example: Program
                          id:
                            type: string
                            description: "The id of the entity being referenced"
                            example: "3173335a-810b-4b53-b009-122a169f9920"
                          attributes:
                            $ref: "https://raw.githubusercontent.com/booxmedialtd/api-documentation/master/rest/snippets/EnrichedMetadata/ProgramEntity.yml#/ProgramEntity"
                    included:
                      type: array
                      description: "This key MUST NOT be included if the `included` parameter is not used in the request URL"
                      items:
                        type: object
                        properties:
                          type:
                            type: string
                            example: "Episode"
                            description: The type of the entity that is being included.  It will be one of [Series|Episode|Season|Genre|CreditedPerson]
                          id:
                            type: string
                            example: "6a5118ad-e73f-4b76-9ec1-5855f9ce40fa"
                          attributes:
                              $ref: "https://raw.githubusercontent.com/booxmedialtd/api-documentation/master/rest/snippets/EnrichedMetadata/EpisodeEntity.yml#/EpisodeEntity"

          '400':
            description: Standard error response
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    errors:
                      type: array
                      items:
                        $ref: "https://raw.githubusercontent.com/booxmedialtd/api-documentation/master/rest/snippets/General/ErrorEntity.yml#/Error"


  /programs/{program_id}:
    get:
      summary: >-
        Get a specific program.
        NOTE:  This endpoint will *always* include [Series|Episode|Season|Genre|CreditedPerson] relationships and DOES NOT support the `included` parameter.
      description: |
        * **Available since:** 2019-06 (BPLAT-4173)
      tags:
      - Programs
      operationId: GetProgram
      parameters:
        - in: path
          name: program_id
          required: true
          description: "The identifier of the program"
          schema:
            type: string
        - in: query
          name: language
          required: false
          description: >-
            The PK of the language to use, which will be a 3 character ISO 639-2 string (e.g.: fin).
            If this is omitted the system defined default will be used.
            If the requested language is not available then the system will return translations in order of the system defined preferences
          schema:
            type: string

      responses:
        '200':
          description: "Successful response"
          content:
            application/json:
              schema:
                type: "object"
                required:
                - data
                properties:
                  data:
                    type: object
                    required:
                    - type
                    - id
                    properties:
                      type:
                        type: string
                        example: Program
                      id:
                        type: string
                        description: "The id of the entity being referenced"
                        example: "3173335a-810b-4b53-b009-122a169f9920"
                      attributes:
                        $ref: "https://raw.githubusercontent.com/booxmedialtd/api-documentation/master/rest/snippets/EnrichedMetadata/ProgramEntity.yml#/ProgramEntity"
                  included:
                    type: array
                    description: "This key includes relationships of program"
                    items:
                      anyOf:
                      - $ref: "https://raw.githubusercontent.com/booxmedialtd/api-documentation/master/rest/snippets/EnrichedMetadata/SeriesEntity.yml#/SeriesEntity"
                      - type: object
                        properties:
                          type:
                            type: string
                            example: "Episode"
                            description: The type of the entity that is being included.  It will be one of [Series|Episode|Season|Genre|CreditedPerson]
                          id:
                            type: string
                            example: "6a5118ad-e73f-4b76-9ec1-5855f9ce40fa"
                          attributes:
                              $ref: "https://raw.githubusercontent.com/booxmedialtd/api-documentation/master/rest/snippets/EnrichedMetadata/EpisodeEntity.yml#/EpisodeEntity"
                      - type: object
                        properties:
                          type:
                            type: string
                            example: "Season"
                            description: The type of the entity that is being included.  It will be one of [Series|Episode|Season|Genre|CreditedPerson]
                          id:
                            type: string
                            example: "e84416c1-d750-43de-aa06-b52788aeacb3"
                          attributes:
                              $ref: "https://raw.githubusercontent.com/booxmedialtd/api-documentation/master/rest/snippets/EnrichedMetadata/SeasonEntity.yml#/SeasonEntity"
                      - type: object
                        properties:
                          type:
                            type: string
                            example: "Genre"
                            description: The type of the entity that is being included.  It will be one of [Series|Episode|Season|Genre|CreditedPerson]
                          id:
                            type: string
                            example: "d8199df1-9d97-4732-b600-223a886881f2"
                          attributes:
                              $ref: "https://raw.githubusercontent.com/booxmedialtd/api-documentation/master/rest/snippets/EnrichedMetadata/GenreEntity.yml#/GenreEntity"
                      - type: object
                        properties:
                          type:
                            type: string
                            example: "CreditedPerson"
                            description: The type of the entity that is being included.  It will be one of [Series|Episode|Season|Genre|CreditedPerson]
                          id:
                            type: string
                            example: "6ddbd042-a912-4aa3-9db6-6daa24948ade"
                          attributes:
                              $ref: "https://raw.githubusercontent.com/booxmedialtd/api-documentation/master/rest/snippets/EnrichedMetadata/CreditedPersonEntity.yml#/CreditedPersonEntity"


        '400':
          description: Standard error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: "https://raw.githubusercontent.com/booxmedialtd/api-documentation/master/rest/snippets/General/ErrorEntity.yml#/Error"

# ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

  /programs/{program_id}/broadcast_slots:
    get:
      summary: Get an index of broadcast_slots in which the program appears
      description:  |
        * **Available since:** NOT YET AVAILABLE
        * We do not support including related resources in the index view.
      tags:
      - BroadcastSlots
      operationId: GetBroadcastSlotsForProgram
      parameters:
        - in: path
          name: program_id
          required: true
          description: "The identifier of the program"
          schema:
            type: string
        - in: query
          name: start_date_yyyymmdd
          required: true
          example: 20190623
          description: >-
            You will receive a window of EPG data that begins with this date and extends for the number of days supplied in the "days_to_return"
            parameter.  Note that the API will return results starting from 00:00:01 on this date and we do not support specifying time
          schema:
            type: string
        - in: query
          name: days_to_return
          required: false
          description: >-
            How many days of data to return in the response.
            Only [1,3,7,31] are acceptable values, using any other value will result in a 400 error being returned.
            Default: 7
          schema:
            type: integer
            enum: [1,3,7,31]
        - in: query
          name: language
          required: false
          description: >-
            The PK of the language to use, which will be a 3 character ISO 639-2 string (e.g.: fin).
            If this is omitted the system defined default will be used.
            If the requested language is not available then the system will return translations in order of the system defined preferences
          schema:
            type: string
      responses:
        200:
          description: "Successful response"
          content:
            application/json:
              schema:
                type: "object"
                required:
                - data
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      required:
                      - type
                      - id
                      properties:
                        type:
                          type: string
                          example: BroadcastSlot
                        id:
                          type: string
                          description: "The id of the entity being referenced"
                          example: "f50a8a6b-e96a-4eb7-8d87-a14c1a991b96"
                        attributes:
                          $ref: "../../snippets/Schedule/BroadcastSlotEntity.yml#/BroadcastSlotEntity"

        400:
          description: Standard error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: "https://raw.githubusercontent.com/booxmedialtd/api-documentation/master/rest/snippets/General/ErrorEntity.yml#/Error"
