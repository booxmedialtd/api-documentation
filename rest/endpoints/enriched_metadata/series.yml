openapi: 3.0.0
info:
  description: >
    This endpoint provides metadata about Series.

    Multiple Programs are grouped into a Series which consists of several Episodes that belong to Seasons
    A Program can be either part of a Series (in which case it is an Episode) or stand alone.
    Note: The plural of a single Series is Series
  version: 1.0.0
  title: Series metadata
tags:
  - name: Series
    description: |
      Multiple Programs are grouped into a Series which consists of several Episodes that belong to Seasons
      A Program can be either part of a Series (in which case it is an Episode) or stand alone.
      Note: The plural of a single Series is Series
servers:
  - url: 'https://demo.aminocom.com/api/metadata/v1/'
components:
  securitySchemes:
    bearerAuth:            # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT    # optional, arbitrary value for documentation purposes
security:
  - bearerAuth: []         # use the same name as above
paths:

# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------

  /series:
    get:
      summary: "Get an index of series, sorted by release_year in descending order (get the newest releases first)"
      description: | 
        * **Available since:** 2019-06 (BPLAT-4173)
      tags:
      - Series
      operationId: GetSeriesIndex
      parameters:
        - in: query
          name: language
          required: false
          description: >-
            The PK of the language to use, which will be a 3 character ISO 639-2 string (e.g.: fin).
            If this is omitted the system defined default will be used.
            If the requested language is not available then the system will return translations in order of the system defined preferences"
          schema:
            type: string
        - in: query
          name: page
          required: false
          description: Please see https://jsonapi.org/profiles/ethanresnick/cursor-pagination. Only page number is supported at the moment. Ex. page[number]=1. Default = 1
          schema:
            type: string
        - in: query
          name: sort
          required: false
          description: >-
            Please see http://jsonapi.org/format/#fetching-sorting
            The following are attributes to sort on: [series.title|series.release_year]
          schema:
            type: string
        - in: query
          name: filter
          required: false
          description: >-
            Please see http://jsonapi.org/recommendations/#filtering
            The following are attributes to filter on: [content_rating.adult|genre.id|season.id]
            When filtering on content_rating.adult only "true" will be treated as true.
          schema:
            type: string
      responses:
        '200':
          description: "Successful response"
          content:
            application/json:
              schema:
                type: object
                required:
                - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "https://raw.githubusercontent.com/booxmedialtd/api-documentation/master/rest/snippets/EnrichedMetadata/SeriesEntity.yml#/SeriesEntity"

        '400':
          description: Standard error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: "https://raw.githubusercontent.com/booxmedialtd/api-documentation/master/rest/snippets/General/ErrorEntity.yml#/Error"

# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------

  /series/{series_id}:
    get:
      summary: "Get an individual series.  NOTE:  This endpoint will *always* include [Season|Genre|CreditedPerson] relationships and DOES NOT support the `included` parameter."
      tags:
      - "Series"
      operationId: "GetSeriesEntity"
      parameters:
        - in: path
          name: series_id
          required: true
          description: The identifier of the series
          schema:
            type: string
        - in: query
          name: language
          required: false
          description: >-
            The PK of the language to use, which will be a 3 character ISO 639-2 string (e.g.: fin).
            If this is omitted the system defined default will be used.
            If the requested language is not available then the system will return translations in order of the system defined preferences"
          schema:
            type: string

      responses:
        '200':
          description: "Successful response"
          content:
            application/json:
              schema:
                type: object
                required:
                - data
                properties:
                  data:
                    $ref: "https://raw.githubusercontent.com/booxmedialtd/api-documentation/master/rest/snippets/EnrichedMetadata/SeriesEntity.yml#/SeriesEntity"
                  included:
                    type: array
                    description: "This key MUST NOT be included if the `included` parameter is not used in the request URL"
                    items:
                      type: object
                      description: "Note that different sorts of entity may be included (this array is not guaranteed to be homogenous), but the Swagger definition does not allow including more than one example of an item of an array so only one type is shown."
                      properties:
                        type:
                          type: string
                          example: Season
                        id:
                          type: string
                          description: "The id of the entity being referenced"
                          example: "e00adc12-6fcb-4176-832f-45a0b84aa908"
                        attributes:
                          $ref: "https://raw.githubusercontent.com/booxmedialtd/api-documentation/master/rest/snippets/EnrichedMetadata/SeasonEntity.yml#/SeasonEntity"
        '400':
          description: Standard error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: "https://raw.githubusercontent.com/booxmedialtd/api-documentation/master/rest/snippets/General/ErrorEntity.yml#/Error"

