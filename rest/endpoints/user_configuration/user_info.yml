openapi: 3.0.0
info:
  description: >-
    A user is a physical person consuming the services offered by Move.
    In the future we may introduce the concept of an Account where One Account Has Many User, but currently there is no distinction between User and Account
    Users may be subscribers or guests.
  version: "1.0.0"
  title: "Users"
tags:
- name: Users
  description: >-
    A user is a physical person consuming the services offered by Move.
servers:
- url: 'https://demo.aminocom.com/api/users/v1/'
components:
  securitySchemes:
    bearerAuth:            # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT    # optional, arbitrary value for documentation purposes
security:
- bearerAuth: []         # use the same name as above
paths:

# ------------------------------------------------------------------------------------------------------------------------------------

  /users/{user_id_or_email}:
    get:
      description: |
        * **Available since:** 2018-11 (BPLAT-5282)
      tags:
      - Users
      summary: >-
        Get the details for a particular user.
        Note:  A non-admin user MAY ONLY receive information about themself, not any other user
      operationId: getUser
      parameters:
        - in: query
          name: included
          required: false
          description: >-
            See http://jsonapi.org/format/#fetching-includes
            By default nothing is included.  We support a limited set of relationships for
            inclusion, other relationships need to be called as separate endpoints.
          schema:
            type: integer
            format: int64
        - in: path
          name: user_id_or_email
          required: true
          description: The user identity.  Note that this endpoint is unique in that it accepts legacy user identity (email addresses) as a user_id.
          schema:
            type: string
      responses:
        200:
          description: "Successful response"
          content:
            application/json:
              schema:
                type: "object"
                required:
                - data
                properties:
                  type:
                    type: string
                    example: User
                  id:
                    type: string
                    description: >-
                      The id of the entity being referenced.
                      The API must return 403 if the client attempts to find information about a user other than the authenticated user,
                      The API will not return 404 if the id is not found (to prevent attackers from using this endpoint to discover valid id's),
                      but will rather return 403.
                    example: "e07a7130-4048-4a5f-bfa4-7adc5a5e860e"
                  attributes:
                    $ref: "https://raw.githubusercontent.com/booxmedialtd/api-documentation/master/rest/snippets/Config/UserEntity.yml#/UserEntity"
                  included:
                    type: array
                    description: "This key MUST NOT be included if the `included` parameter is not used in the request URL"
                    items:
                      anyOf:
                      - type: object
                        description: "Note that different sorts of entity may be included (this array is not guaranteed to be homogenous), but the Swagger definition does not allow including more than one example of an item of an array so only one type is shown."
                        properties:
                          type:
                            type: string
                            example:  Product
                            description: The type of the entity that is being included.  It will always be one of [Product|License] in this endpoint.
                          id:
                            type: string
                            example: "5f596672-2796-4f86-b608-9295fa111916"
                          attributes:
                            $ref: "https://raw.githubusercontent.com/booxmedialtd/api-documentation/master/rest/snippets/Config/ProductEntity.yml#/ProductEntity"
                      - $ref: "https://raw.githubusercontent.com/booxmedialtd/api-documentation/master/rest/snippets/Config/LicenseEntity.yml#/LicenseEntity"


        403:
          description: The API must return 403 if the client attempts to find information about a user other than the authenticated user
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: "https://raw.githubusercontent.com/booxmedialtd/api-documentation/master/rest/snippets/General/ForbiddenEntity.yml#/ForbiddenError"

    patch:
      description: |
        * **Available since:** 2019-07 (BPLAT-10994)
      tags:
      - Users
      summary: Make changes to the user object.  Note that not all fields may be PATCHed by the user.
      operationId: updateUserProfile
      parameters:
        - in: path
          name: user_id
          required: true
          description: The identity of the user.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "https://raw.githubusercontent.com/booxmedialtd/api-documentation/master/rest/snippets/Config/UserEntity.yml#/UserEntity"
      responses:
        204:
          description: |
            The resource was updated successfully, no response body is needed

        403:
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: "https://raw.githubusercontent.com/booxmedialtd/api-documentation/master/rest/snippets/General/ErrorEntity.yml#/Error"
                example:
                  id: 9303f876
                  code: f223db3
                  title: PIN code incorrect
                  details: >-
                    The PIN code that you supplied does not match the one we have stored for the account.
