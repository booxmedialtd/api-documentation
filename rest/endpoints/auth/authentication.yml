openapi: 3.0.0
info:
  description: >-
    Authentication is the process or action of proving or showing something to be true, genuine, or valid.
  version: 1.0.0
  title: Authentication
tags:
- name: Account Authentication
servers:
- url: 'https://demo.aminocom.com/api/auth/v1/'
components:
  securitySchemes:
    bearerAuth:            # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT    # optional, arbitrary value for documentation purposes
  schemas:
    grantType:
      type: object
      required:
        - grant_type
        - credentials
      properties:
        grant_type:
          type: string
          enum: [refresh_token|password]
        login_user_profile:
          type: string
          description: The ID of a user profile for which the user wishes to obtain access tokens. If omitted, the users default profile will be used.
          example: "84eb61a9-75d4-42c7-8c15-84c3d7776227"
    refreshTokenGrantType:
      allOf:
        - $ref: '#/components/schemas/grantType'
        - type: object
          properties:
            grant_type:
              type: string
              enum: [refresh_token]
            credentials:
              type: object
              properties:
                refresh_token:
                  type: string
                  description: >-
                      The refresh token that was issued at the same time as an access token.
                  example: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJFbmFibGVTVEIiLCJpYXQiOjE1MzE4MzQyNDEsImV4cCI6MTU2MzM3MDI0MSwiYXVkIjoid3d3LmFtaW5vY29tLmNvbSIsInN1YiI6ImFuZHkuYmVha0BhbWlub2NvbS5jb20ifQ.jtTwO3YEyXmEf5XjjxUK8V_MPRvxdi7DN1eEBUyjfkE
    passwordGrantType:
      allOf:
        - $ref: '#/components/schemas/grantType'
        - type: object
          description: |
            * **Available since:** 2020-02 (BPLAT-12506)
          properties:
            grant_type:
              type: string
              enum: [password]
            credentials:
              type: object
              properties:
                username:
                  type: string
                  description: >-
                    User name
                password:
                  type: string
                  description: >-
                    User password

security:
- bearerAuth: []         # use the same name as above
paths:

# ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


  /access_tokens:
    post:
      summary: |
        Create an access token that can be used to authenticate to the API.  Note that there is no session involved.
      description: |
        * **Available since:** 2019-10 (BPLAT-11893)
      tags:
      - Account Authentication
      operationId: createAccessToken
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/refreshTokenGrantType'
                - $ref: '#/components/schemas/passwordGrantType'
            example:
              grant_type: "refresh_token"
              credentials:
                refresh_token: "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJFbmFibGVTVEIiLCJpYXQiOjE1MzE4MzQyNDEsImV4cCI6MTU2MzM3MDI0MSwiYXVkIjoid3d3LmFtaW5vY29tLmNvbSIsInN1YiI6ImFuZHkuYmVha0BhbWlub2NvbS5jb20ifQ.jtTwO3YEyXmEf5XjjxUK8V_MPRvxdi7DN1eEBUyjfkE"
              login_user_profile: "84eb61a9-75d4-42c7-8c15-84c3d7776227"

      responses:
        '201':
          description: |
            Successful response.
          headers:
            cache-control: "no-cache, no-store, must-revalidate"
          content:
            text/plain:
              schema:
                type: "object"
                required:
                - data
                properties:
                  data:
                    type: object
                    required:
                    - type
                    - id
                    properties:
                      type:
                        type: string
                        example: AccessToken
                      id:
                        type: string
                        description: "The id of the entity being referenced"
                        example: "9bc6871e-ce26-4b8a-96f6-e6688599d938"
                      attributes:
                        $ref: "https://raw.githubusercontent.com/booxmedialtd/api-documentation/master/rest/snippets/Auth/AuthenticationTokens.yml#/AuthenticationTokens"


        '400':
          description: Standard error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: "https://raw.githubusercontent.com/booxmedialtd/api-documentation/master/rest/snippets/General/ErrorEntity.yml#/Error"

# ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

#  /access_token/{access_token_id}:
#    delete:
#      summary: |
#        Invalidate an access token (and its associated refresh token).  You must supply the access token as authentication to this endpoint.
#        The API will verify that the jti of the supplied access token matches the access_token_id you want to delete.
#      description: |
#        * **Available since:** NOT AVAILABLE
#      tags:
#      - Account Authentication
#      operationId: deleteAccessToken
#      parameters:
#        - in: path
#          name: user_id
#          required: true
#          description: The user identity (please do not use an email address to identify the user)
#          schema:
#            type: string
#        - in: path
#          name: access_token_id
#          required: true
#          description: The id of the access token to revoke
#          schema:
#            type: string
#
#      responses:
#        '204':
#          description: |
#            The user session was deleted successfully
#
#        '400':
#          description: Standard error response
#          content:
#            application/json:
#              schema:
#                type: object
#                properties:
#                  errors:
#                    type: array
#                    items:
#                      $ref: "https://raw.githubusercontent.com/booxmedialtd/api-documentation/master/rest/snippets/General/ErrorEntity.yml#/Error"

