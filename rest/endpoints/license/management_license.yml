openapi: 3.0.0
info:
  description: >
    This endpoint provides licenses details.
    Basically, it will show all licenses with pagination. Besides, it can be filtered to limit results.
  version: 1.0.0
  title: Management
tags:
  - name: Licenses
    description: |
      Licenses Management API is used for management level, not for clients.
servers:
  - url: 'https://demo.aminocom.com/api/license/management/v1'
components:
  securitySchemes:
    bearerAuth:            # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT    # optional, arbitrary value for documentation purposes
security:
  - bearerAuth: []         # use the same name as above
paths:

  # ------------------------------------------------------------------------------------------------------------------------------------------------------------------------

  /licenses:
    get:
      summary: >-
        Get all requested licenses.
      description: |
        * **Available since:** 2020-04 (BPLAT-12622)
      tags:
        - Licenses
      operationId: GetLicenses
      parameters:
        - in: query
          name: page_number
          required: false
          description: "The page number (1000 results per page) of results to retrieve.  If this parameter is ommitted then it is assumed to be 1 (not zero based, 1 means the first page)"
          schema:
            type: integer
            format: int64
        - in: query
          name: filter
          required: false
          description: >-
            Please see http://jsonapi.org/recommendations/#filtering.
            The following are attributes to filter on: [status|payment_method|purchase_later_than].
            status should be in range [ACTIVE|EXPIRED|SUSPENDED...].
            purchase_later_than should follow the format [Y-m-d]
          schema:
            type: string
      responses:
        '200':
          description: "Successful response"
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "https://raw.githubusercontent.com/booxmedialtd/api-documentation/master/rest/snippets/Config/LicenseEntity.yml#/LicenseEntity"
        '400':
          description: Standard error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: "https://raw.githubusercontent.com/booxmedialtd/api-documentation/master/rest/snippets/General/ErrorEntity.yml#/Error"
        '403':
          description: Standard error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: "https://raw.githubusercontent.com/booxmedialtd/api-documentation/master/rest/snippets/General/ForbiddenEntity.yml#/ForbiddenError"
