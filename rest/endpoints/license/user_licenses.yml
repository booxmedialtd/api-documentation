openapi: 3.0.0
info:
  description: >
    This endpoint provides metadata about User Licenses
  version: 1.0.0
  title: User Licenses
tags:
  - name: User Recording
    description: |
      User recording
servers:
  - url: 'https://demo.aminocom.com/api/license/v1/'
components:
  securitySchemes:
    bearerAuth:            # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT    # optional, arbitrary value for documentation purposes
security:
  - bearerAuth: []         # use the same name as above
paths:


# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# CHANNEL LICENSES
# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

  /user/{user_id}/relationships/channel_licenses:
    get:
      summary: |
        Get an index of the licenses that a user has for channels
      tags:
      - Channels
      operationId: "GetUserChannelLicenses"
      parameters:
        - in: path
          name: user_id
          required: true
          description: "The user identifier"
          schema:
            type: string

      responses:
        '200':
          description: "Successful response"
          headers:
            cache-control: "private, max-age=600"
          content:
            application/json:
              schema:
                type: object
                required:
                - data
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      required:
                      - type
                      - id
                      properties:
                        id:
                          type: string
                          description: "The id of the channel license"
                          example: "2e4087f0-e17a-4ac9-a2ac-b6cbef5f9d35"
                        type:
                          type: string
                          example: UserChannelLicense
                        attributes:
                          $ref: "https://raw.githubusercontent.com/booxmedialtd/api-documentation/master/rest/snippets/License/UserChannelLicense.yml#/UserChannelLicense"

    post:
      summary: |
        Add a new channel license to a user
      tags:
      - Channels
      operationId: addUserChannelLicenses
      parameters:
        - in: path
          name: user_id
          required: true
          description: "The user identifier"
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                    description: "The id of the entity being referenced"
                    example: "bab838b3-def8-4bff-87ed-66e663134f50"
                  type:
                    type: string
                    example: UserChannelLicense
      responses:
         '201':
            description: |
              Successful response.
            content:
              text/plain:
                schema:
                  type: string
                  example: CREATED
                  description: |
                    Clients are advised NOT to use the body of the response to determine success or failure, but SHOULD rather
                    rely on the HTTP status code being 201 to indicate success.


# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# RECORDING DEVICES
# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  /users/{user_id}/recording_devices:
    get:
      tags:
      - User Recording
      summary: "Fetch a list of recording devices that are available to the user"
      description: >-
        Note that the responsibility of managing recording devices is the responsibility of the Licensing component of the AminoTV platform.
        This endpoint is listed in the recording section for convenience, but may be more logically placed in the licensing section.
      operationId: getRecordingDevices
      parameters:
        - in: path
          name: user_id
          description: The user id to obtain recordings for
          required: true
          schema:
            type: string
      responses:
        200:
          description: "Successful response"
          content:
            application/json:
              schema:
                type: "object"
                required:
                - data
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      required:
                      - type
                      - id
                      properties:
                        type:
                          type: string
                          example: UserRecordingDevice
                        id:
                          type: string
                          example: e61c98db-9b36-4a3a-af86-ac7c4ccb960c
                        attributes:
                          $ref: "https://raw.githubusercontent.com/booxmedialtd/api-documentation/master/rest/snippets/License/UserRecordingDevice.yml#/UserRecordingDevice"
