openapi: 3.0.0
info:
  version: "1.0.0"
  title: "Recordings"
tags:
- name: Individual recordings
- name: Recording Groups
- name: Playhead control
- name: Catchup
servers:
- url: 'https://boox.fi/api'
paths:

# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# Recordings
# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

  /user/{user_id}/recording/search:
    get:
      summary: This endpoint can be used to return a list of recordings that are filtered by search criteria
      description: >-
        A user performs a search by applying GET method to "search" resource within "recording.
        If the start-time (st) is specified, it will limit the results to programs with start-time equal or greater than "st" value.
        If the end-time (et) is specified, it will limit the results to programs with start time equal or less than "et" value.
        A user can limit the amount of information returned by specifying the number of items to return in a single response (ipp)
        and page-number (pg) of the result. More results can retrieve by the user by incrementing the page-number, till the results
        in the response are lesser than the maximum number of items per page. If the items per page are greater than a server-configurable
        max-value, only max-items are returned. The page-number starts from 1. "search_in" parameters can be title, description and category.
        "keyword" parameter is mandatory if "search_in" is specified. "sort" parameter can be used to define the order in which the results
        are shown. By default, the results are sorted in descending order of start-date ("start_date__desc"), with newest items in the
        start. Other options are "rec_count__desc", which will sort it according to number of times the item is asked to be recorded by different users.
        "recordings" array will always return at least 2 streams even if the recording only has one.
        This is due to legacy WBox compatibility which always gets the second stream from the recording.
      tags:
      - Individual recordings
      operationId: indexGuide
      parameters:
      - in: query
        name: service_token
        description: Service to which the user belongs.
        required: true
        schema:
          type: string
      - in: path
        name: user_id
        description: The email address of the user
        required: true
        schema:
          type: string
      - in: query
        name: st
        description: Date and time where to start the recording information
        required: false
        schema:
          type: integer
      - in: query
        name: et
        description: Date and time where to end the recording information
        required: false
        schema:
          type: integer
      - in: query
        name: pg
        description: Page number if the results have more items than ipp. Default = 0
        required: false
        schema:
          type: integer
      - in: query
        name: ipp
        description: Maximum number of result items per page. Default = 1000
        required: false
        schema:
          type: integer
      - in: query
        name: ch
        description: List of channel IDs, separated by comma. Defaults of all channels
        required: false
        schema:
          type: string
      - in: query
        name: keyword
        description: Keyword to match in program information. Defaults to match with all recordings of the user
        required: false
        schema:
          type: string
      - in: query
        name: search_in
        description: >-
          Searches for keyword in defined fields.  Defaults to "title" of the recording
        required: false
        schema:
          type: string
          enum: ["title", "description", "category", "program_uid"]
      - in: query
        name: cat
        description: Comma separted list of program category ids. They are used to search by title or description within category
        required: false
        schema:
          type: string
      - in: query
        name: sort
        description: Sorting criteria for the results. Defaults to “start_date__desc”
        required: false
        schema:
          type: string
      responses:
        '200':
          description: "Successful response"
          content:
            application/json:
              schema:
                $ref: "https://raw.githubusercontent.com/booxmedialtd/api-documentation/master/legacy/snippets/recordings/RecordingSearchResult.yml#/RecordingSearchResult"
# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# Groups
# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

  /user/{user_id}/recording/group:
    get:
      summary: Shows list of recording groups and single programs that don't belong to any groups from the server
      description: >-
        Shows list of recording groups and single programs that don't belong to any groups from the server with following information:
        Recording group meta info: title of the group, count of programs in each group, metadata of the latest episode in the group
        (e.g. broadcast time, channel). There will be a field called 'type' with values SYSTEMGROUP to know that it is a group of
        recordings with same title
        Non-grouped programs: all metadata of single recordings
        Both the system-defined recording groups and single programs are the one which user has marked for himself. This will allow to
        share the same group name with other users, while each user will only see groups and programs, which he has already recorded
        The list of groups and single programs will be shown in alphabetical order
      tags:
      - Recording Groups
      operationId: indexGuide
      parameters:
      - in: query
        name: service_token
        description: Service to which the user belongs.
        required: true
        schema:
          type: string
      - in: path
        name: user_id
        description: The email address of the user
        required: true
        schema:
          type: string
      - in: query
        name: pg
        description: Page number if the results have more items than ipp. Default = 0
        required: false
        schema:
          type: integer
      - in: query
        name: ipp
        description: Maximum number of result items per page. Default = 1000
        required: false
        schema:
          type: integer
      responses:
        '200':
          description: "Successful response"
          content:
            application/json:
              schema:
                type: object
                required:
                - groupedAndSingleProgramsList
                properties:
                  groupedAndSingleProgramsList:
                    type: object
                    required:
                    - resultSet
                    - groupsAndPrograms
                    properties:
                      resultSet:
                        type: object
                        required:
                        - totalItems
                        - totalPages
                        - itemsPerPage
                        - currentPage
                        properties:
                          totalItems:
                            type: integer
                            example: 4611
                          totalPages:
                            type: integer
                            example: 47
                          itemsPerPage:
                            type: integer
                            example: 100
                          currentPage:
                            type: integer
                            example: 0
                      groupsAndPrograms:
                        type: array
                        items:
                          anyOf:
                          - type: object
                            required:
                            - category
                            - subCategory
                            - categories
                            - channelId
                            - programUid
                            - showId
                            - programInstanceMetadataId
                            - programCrId
                            - startTime
                            - continuous
                            - autoDelete
                            - favorite
                            - description
                            - duration
                            - playbackDuration
                            - thumbnailUrl
                            properties:
                              category:
                                type: string
                                example: Show/Game show
                              subCategory:
                                type: string
                                example: ""
                              categories:
                                type: array
                                items: string
                                example: ["Sarjat", "Asiaohjelmat", "Show/Game show", "Viihde"]
                              channelId:
                                type: string
                                example: "17"
                              programUid:
                                type: string
                                example: "20111119184517"
                              showId:
                                type: string
                                example: "1-series"
                                description: this key is null if nPVRShowInfo parameter is not enabled and series_id, program_id are null
                              programInstanceMetadataId:
                                type: string
                                example: "647843303"
                                description: This key is is null if metadata module is not enabled
                              programCrId:
                                type: string
                                example: "192867475"
                                description: This key is is null if metadata module is not enabled
                              startTime:
                                type: string
                                example: "Sat, 19 Nov 2011 16:45:33 +0200"
                              continuous:
                                type: boolean
                                example: true
                              autoDelete:
                                type: boolean
                                example: true
                              favorite:
                                type: boolean
                                example: false
                              description:
                                type: string
                                example: >-
                                  Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque ut risus et mi rutrum aliquet.
                                  Praesent feugiat condimentum arcu sit amet gravida. Proin vitae sapien lorem. Sed tortor mauris,
                                  pellentesque non dui in, lobortis cursus lorem. Ut porta, ante aliquet lacinia ultricies, massa
                                  dolor mattis diam, ultricies fermentum ex orci vel tellus. Ut et volutpat sapien.
                              duration:
                                type: integer
                                example: 3055,
                              playbackDuration:
                                type: integer
                                example: 1258,
                              thumbnailUrl:
                                type: string
                                example: ""
                              recordings:
                                type: array
                                items:
                                  type: object
                                  required:
                                  - stream
                                  - recorded_duration
                                  - status
                                  - recording_id
                                  properties:
                                    stream:
                                      type: object
                                      required:
                                      - bitrate
                                      - type
                                      - protocol
                                      - streamUrl
                                      properties:
                                        bitrate:
                                          type: integer
                                          example: 256
                                        type:
                                          type: string
                                          example: video/mp4
                                        protocol:
                                          type: string
                                          example: http
                                        streamUrl:
                                          type: string
                                          example: http://media-host/yle1-20111119_1845-2985-622a89739e1dd6e9158e61dab5c14d35?email=waqqas%40test.com&usid=4eca4ff14ed867.60829558
                                    recorded_duration:
                                      type: integer
                                      example: 525
                                    status:
                                      type: string
                                      example: "SCHEDULED"
                                    recording_id:
                                      type: integer
                                      example: 1234
                          - type: object
                            required:
                            - id
                            - title
                            - programsCount
                            - latestPrograms
                            properties:
                              id:
                                type: string
                                example: "1"
                              title:
                                type: string
                                example: "30 Rock"
                              programsCount:
                                type: integer
                                example: 4
                              latestPrograms:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    programUid:
                                      type: string
                                      example: 8438-161-126-02-2014
                                    title:
                                      type: string
                                      example: "30 Rock"
                                    description:
                                      type: string
                                      example: >-
                                        (S) The Girlie Showssa on tapahtunut merkittäviä muutoksia,
                                        joten Lizillä on täysi työ saada kaikki toimimaan yhteistyössä.
                                        Tracy saa erikoisesta käytöksestään huolimatta kaiken järjestykseen.
                                        (30 Rock, komedia, 1. kausi, USA, 2006)
                                    startTime:
                                      type: integer
                                      example: 1445522181
                                    duration:
                                      type: integer
                                      example: 1800
                                    channelInfo:
                                      type: object
                                      required:
                                      - channelId
                                      - channelName
                                      - thumbnailUrl`
                                      properties:
                                        channelId:
                                          type: integer
                                          example: 123
                                        channelName:
                                          type: string
                                          example: American Dad!
                                        thumbnailUrl:
                                          type: string
                                          example: https://m.media-amazon.com/images/M/MV5BNDRkOWIyOTUtMjg5YS00OTJjLTgwNGYtMjgxMTA0NWQ2NGI3L2ltYWdlXkEyXkFqcGdeQXVyNTAyODkwOQ@@._V1_UX182_CR0,0,182,268_AL_.jpg







# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# Playhead
# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
