openapi: 3.0.0
info:
  version: "1.0.0"
  title: "Recordings"
tags:
- name: Individual recordings
- name: Recording Groups
- name: Playhead control
- name: Catchup
servers:
- url: 'https://boox.fi/api'
paths:

# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# Recordings
# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

  /user/{user_id}/recording/search:
    get:
      summary: This endpoint can be used to return a list of recordings that are filtered by search criteria
      description: >-
        A user performs a search by applying GET method to "search" resource within "recording.
        If the start-time (st) is specified, it will limit the results to programs with start-time equal or greater than "st" value.
        If the end-time (et) is specified, it will limit the results to programs with start time equal or less than "et" value.
        A user can limit the amount of information returned by specifying the number of items to return in a single response (ipp)
        and page-number (pg) of the result. More results can retrieve by the user by incrementing the page-number, till the results
        in the response are lesser than the maximum number of items per page. If the items per page are greater than a server-configurable
        max-value, only max-items are returned. The page-number starts from 1. "search_in" parameters can be title, description and category.
        "keyword" parameter is mandatory if "search_in" is specified. "sort" parameter can be used to define the order in which the results
        are shown. By default, the results are sorted in descending order of start-date ("start_date__desc"), with newest items in the
        start. Other options are "rec_count__desc", which will sort it according to number of times the item is asked to be recorded by different users.
        "recordings" array will always return at least 2 streams even if the recording only has one.
        This is due to legacy WBox compatibility which always gets the second stream from the recording.
      tags:
      - Individual recordings
      operationId: indexGuide
      parameters:
      - in: query
        name: service_token
        description: Service to which the user belongs.
        required: true
        schema:
          type: string
      - in: path
        name: user_id
        description: The email address of the user
        required: true
        schema:
          type: string
      - in: query
        name: st
        description: Date and time where to start the recording information
        required: false
        schema:
          type: integer
      - in: query
        name: et
        description: Date and time where to end the recording information
        required: false
        schema:
          type: integer
      - in: query
        name: pg
        description: Page number if the results have more items than ipp. Default = 0
        required: false
        schema:
          type: integer
      - in: query
        name: ipp
        description: Maximum number of result items per page. Default = 1000
        required: false
        schema:
          type: integer
      - in: query
        name: ch
        description: List of channel IDs, separated by comma. Defaults of all channels
        required: false
        schema:
          type: string
      - in: query
        name: keyword
        description: Keyword to match in program information. Defaults to match with all recordings of the user
        required: false
        schema:
          type: string
      - in: query
        name: search_in
        description: >-
          Searches for keyword in defined fields.  Defaults to "title" of the recording
        required: false
        schema:
          type: string
          enum: ["title", "description", "category", "program_uid"]
      - in: query
        name: cat
        description: Comma separted list of program category ids. They are used to search by title or description within category
        required: false
        schema:
          type: string
      - in: query
        name: sort
        description: Sorting criteria for the results. Defaults to “start_date__desc”
        required: false
        schema:
          type: string
      responses:
        '200':
          description: "Successful response"
          content:
            application/json:
              schema:
                $ref: "https://raw.githubusercontent.com/booxmedialtd/api-documentation/master/legacy/snippets/recordings/RecordingSearchResult.yml#/RecordingSearchResult"

# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# Groups
# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

  /user/{user_id}/recording/group:
    get:
      summary: Shows list of recording groups and single programs that don't belong to any groups from the server
      description: >-
        Shows list of recording groups and single programs that don't belong to any groups from the server with following information:
        Recording group meta info: title of the group, count of programs in each group, metadata of the latest episode in the group
        (e.g. broadcast time, channel). There will be a field called 'type' with values SYSTEMGROUP to know that it is a group of
        recordings with same title
        Non-grouped programs: all metadata of single recordings
        Both the system-defined recording groups and single programs are the one which user has marked for himself. This will allow to
        share the same group name with other users, while each user will only see groups and programs, which he has already recorded
        The list of groups and single programs will be shown in alphabetical order
      tags:
      - Recording Groups
      operationId: indexGuide
      parameters:
      - in: query
        name: service_token
        description: Service to which the user belongs.
        required: true
        schema:
          type: string
      - in: path
        name: user_id
        description: The email address of the user
        required: true
        schema:
          type: string
      - in: query
        name: pg
        description: Page number if the results have more items than ipp. Default = 0
        required: false
        schema:
          type: integer
      - in: query
        name: ipp
        description: Maximum number of result items per page. Default = 1000
        required: false
        schema:
          type: integer
      responses:
        '200':
          description: "Successful response"
          content:
            application/json:
              schema:
                type: object
                required:
                - groupedAndSingleProgramsList
                properties:
                  groupedAndSingleProgramsList:
                    type: object
                    required:
                    - resultSet
                    - groupsAndPrograms
                    properties:
                      resultSet:
                        type: object
                        required:
                        - totalItems
                        - totalPages
                        - itemsPerPage
                        - currentPage
                        properties:
                          totalItems:
                            type: integer
                            example: 4611
                          totalPages:
                            type: integer
                            example: 47
                          itemsPerPage:
                            type: integer
                            example: 100
                          currentPage:
                            type: integer
                            example: 0
                      groupsAndPrograms:
                        type: array
                        items:
                          anyOf:
                          - $ref: "https://raw.githubusercontent.com/booxmedialtd/api-documentation/master/legacy/snippets/recordings/RecordingResult.yml#/RecordingResult"
                          - $ref: "https://raw.githubusercontent.com/booxmedialtd/api-documentation/master/legacy/snippets/recordings/RecordingGroup.yml#/RecordingGroup"



# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# Playhead
# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------




# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# Catchup
# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

  /user/{user_id}/recording/catchup:
    get:
      summary: Gets an index of programs available for catchup
      tags:
      - Catchup
      operationId: indexCatchup
      parameters:
      - in: query
        name: service_token
        description: Service to which the user belongs.
        required: true
        schema:
          type: string
      - in: path
        name: user_id
        description: The email address of the user
        required: true
        schema:
          type: string
      - in: query
        name: pg
        description: Page number if the results have more items than ipp. Default = 0
        required: false
        schema:
          type: integer
      - in: query
        name: ipp
        description: Maximum number of result items per page. Default = 100
        required: false
        schema:
          type: integer
      - in: query
        name: ch
        description: List of channel IDs, separated by comma. Defaults of all channels
        required: false
        schema:
          type: string
      - in: query
        name: keyword
        description: Keyword to match in program information. Defaults to match with all recordings of the user
        required: false
        schema:
          type: string
      - in: query
        name: search_in
        description: >-
          Searches for keyword in defined fields.  Defaults to "title" of the recording
        required: false
        schema:
          type: string
          enum: ["title", "description", "category", "program_uid"]
      - in: query
        name: st
        description: >-
          Date and time from where to start the EPG information.
          If param is not passed then st will be current date - 7 days.
          st will be in Unix timestamp format.
        required: false
        schema:
          type: integer
      - in: query
        name: et
        description: >-
            Date and time where to end EPG information.
            If et is not specified then et will be current date+ 14 days.
            If st is passed in query string the et will be st+14 days.
            et will be in Unix timestamp format.
        required: false
        schema:
          type: integer
      - in: query
        name: show_future_catchup
        description: Set this param to true will show EPG information with invalid criteria.
        required: false
        schema:
          type: boolean
      - in: query
        name: show_past_catchup
        description: Set this param to true will show past EPG information with invalid criteria.
        required: false
        schema:
          type: boolean
      - in: query
        name: network
        description: Filters items according to the network specified. Accepts comma separated values. Possible values are ott, dvb, iptv.
        required: false
        schema:
          type: string
          enum: [ott, dvb, iptv]
      responses:
        '200':
          description: "Successful response"
          content:
            application/json:
              schema:
                type: object
                required:
                - resultSet
                - programList
                properties:
                  resultSet:
                    type: object
                    properties:
                      resultSet:
                        type: object
                        properties:
                          totalItems:
                            type: integer
                            example: 14
                          totalPages:
                            type: integer
                            example: 14
                          itemsPerPage:
                            type: integer
                            example: 1
                          currentPage:
                            type: integer
                            example: 0
                          offset:
                            type: integer
                            example: 0
                      programList:
                        type: object
                        properties:
                          description:
                            type: string
                            example: Catchup Listing
                          language:
                            type: string
                            example: fi-FI
                          pubDate:
                            type: string
                            example: Tue, 19 May 2015 09:35:44 +0300
                          programs:
                            type: array
                            items:
                              type: object
                              properties:
                                category:
                                  type: string
                                  example: Show/Game show
                                subCategory:
                                  type: string
                                  example: ""
                                categories:
                                  type: array
                                  items:
                                    type: string
                                    example: ["Sarjat", "Asiaohjelmat", "Show/Game show", "Viihde"]
                                channelId:
                                  type: string
                                  example: "17"
                                isUserAuthorized:
                                  type: boolean
                                  example: false
                                title:
                                  type: string
                                  example: Spelling-suvun kartano myynniss\u00e4
                                programUid:
                                  type: string
                                  example: 8438-155-385-18-2015
                                startTime:
                                  type: string
                                  example: Wed, 06 May 2015 00:00:00 +0300
                                continuous:
                                  type: boolean
                                  example: false
                                autoDelete:
                                  type: boolean
                                  example: false
                                favorite:
                                  type: boolean
                                  example: false
                                description:
                                  type: string
                                  example: >-
                                    Ensikurkistus mahtisuvun kartanoon. 5-osaisessa sarjassa edesmenneen tuottajan Aaron Spellingin
                                    leski Candy Spelling esittelee suvun hulppeaa kartanoa aikeissa itse muuttaa. Amerikkalainen lifestylesarja
                                duration:
                                  type: integer
                                  example: 3600
                                playbackDuration:
                                  type: integer
                                  example: 0
                                availabilityStart:
                                  type: string
                                  example: Fri, 01 May 2015 00:00:00 +0300
                                availabilityEnd:
                                  type: string
                                  example: Sun, 10 May 2015 00:00:00 +0300
                                thumbnailUrl:
                                  type: string
                                  example: http:\/\/demo.booxmedia.com\/api\/recording\/viewthumbnail\/id\/945555\/service\/dnaclient
                                recordable:
                                  type: string
                                  example: "true"
                                  enum: ["true", "false"]
                                fastForward:
                                  type: object
                                  required:
                                  - pvr
                                  - catchup
                                  properties:
                                    pvr:
                                      type: boolean
                                      example: true
                                    catchup:
                                      type: boolean
                                      example: true
                                user:
                                  type: object
                                  required:
                                  - recording
                                  properties:
                                    recording:
                                      type: object
                                      required:
                                      - isAvailable
                                      - isContinuous
                                      - isAutoDelete
                                      - playbackDuration
                                      - isFavorite
                                      properaties:
                                        isAvailable:
                                          type: boolean
                                          example: false
                                        isContinuous:
                                          type: boolean
                                          example: false
                                        isAutoDelete:
                                          type: boolean
                                          example: false
                                        playbackDuration:
                                          type: integer
                                          example: 0
                                        isFavorite:
                                          type: boolean
                                          example: false
                                recordings:
                                  type: array
                                  items:
                                    type: object
                                    required:
                                    - status
                                    - stream
                                    properties:
                                      status:
                                        type: string
                                        example: "RECORDED"
                                      stream:
                                        type: object
                                        properties:
                                          bitrate:
                                            type: integer
                                            example: 256
                                          type:
                                            type: string
                                            example: "video\/mp4"
                                          protocol:
                                            type: string
                                            example: http
                                          streamUrl:
                                            type: string
                                            example: http:\/\/demo.booxmedia.com\/api\/recording\/view\/id\/945555\/service\/dnaclient
                                          downloadUrl:
                                            type: string
                                            example: http:\/\/demo.booxmedia.com\/api\/recording\/view\/id\/945555\/service\/dnaclient\/download\/true
                                          hlsUrl:
                                            type: string
                                            example: http:\/\/demo.booxmedia.com\/api\/recording\/view\/id\/945555\/service\/dnaclient\/hls\/true



