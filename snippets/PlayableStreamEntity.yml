StreamEntity:
    type: object
    properties:
      id:
        type: integer
        example: 123
      type:
        type: string
        example: "PlayableStream"
      relationships:
        type: object
        properties:
          channel:
            type: object
            properties:
              links:
                type: object
                properties:
                  self:
                    type: string
                    description: This is the url to fetch the relationship itself
                  related:
                    type: string
                    description: This will be a link to the parent channel entity
      attributes:
        type: object
        required:
          - profile_name
          - stream_url
        properties:
          profile_name:
            type: string
          suggested_devices:
            type: array
            items:
              type: string
              description: "This must be one of TV, Tablet, Mobile"
          codec_info:
            type: string
          transport_protocol:
            type: string
          streaming_protocols:
            type: array
            items:
              type: string
              description: "This must be one of hls, dash, mp4, mss"
          bitrate:
            type: integer
            description: In the legacy API this was a string, but it is modeled as an integer in the database
          max_resolution:
            type: string
            description: "This must be one of 240, 360, 576, 720, 1080, 4K"
          max_fps:
            type: string
            description: "This must be one of 25, 30, 50, 60.  Please default this to 25 until we implement it in the backend. Please default it to 25 (see https://confluence.aminocom.com/display/BPLAT/Live+Streamer+Requirements)"
          vbr_max_bitrate:
            type: integer
            description: "This must be a positive integer"
          stream_url:
            type: string
          protection_types:
            type: array
            items:
              type: string
              description: "This must be one of none, AES-128, widevine, playready, fairplay, irderto, verimatrix"
          protection_keys:
            type: array
            description: "This will include DRM and authentication keys that are required by the client to access and decrypt the stream.  Note that there may be additional keys in the protection object as these are deployment specific."
            items:
              type: object
              required:
              - type
              properties:
                type:
                  type: string
                  description: "This must be one of none, AES-128, widevine, playready, fairplay, irderto, verimatrix"
                key:
                  type: string
                  description: "This must be the key required to decode the DRM"
                laUrl:
                  type: string
                  description: "This is an example of a free-form DRM key (see specification)"
