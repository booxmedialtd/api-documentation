openapi: 3.0.0
info:
  description: >-
    If a User has the "Record" access for a Channel then they are able to request that we record a Program for them from that Channel.
    A Recording should start off as a request.  A User may request that an entire series be recorded in which case the recording script will create requests on behalf of the User.
    Once the Program has finished Recording is is marked as available.
    Currently the identity of this Entity is a combination of the User and the EPG item that were recorded.  This introduces implicit relationships between other entities (for example EPG item must be unique across all Channel)
    The plan is that when User Recording is separated into its own component as part of the Recording service it will be given its own independent identity.
  version: "1.0.0"
  title: "User recording"
tags:
- name: Recordings
  description: >-
    Recordings are programs that the user has asked to be recorded and which have been marked by the media backend as having been completed
servers:
- url: 'https://demo.aminocom.com/api/recordings/v1/'
components:
  securitySchemes:
    bearerAuth:            # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT    # optional, arbitrary value for documentation purposes
security:
- bearerAuth: []         # use the same name as above
paths:

  /user/{user_id}/user_recordings/{epg_id}/{continuous}:
    get:
      tags:
      - Recordings
      summary: Get an index of user recording entities
      description: >-
        NOTE:  This endpoint will *always* include [Program] relationships and DOES NOT support the `included` parameter.
      operationId: indexRecordings
      parameters:
        - in: path
          name: user_id
          description: The user id to obtain recordings for
          required: true
          schema:
            type: string
        - in: path
          name: epg_id
          description: The epg id to obtain recordings for
          required: true
          schema:
            type: string
        - in: path
          name: continuous
          description: "The integer value of the continuous flag"
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: "Successful response"
          content:
            application/json:
              schema:
                type: "object"
                required:
                - data
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      required:
                      - type
                      - id
                      properties:
                        type:
                          type: string
                          example: UserRecording
                        id:
                          type: string
                          description: "The id of the entity being referenced"
                          example: >-
                            {"user_id":1,"epg_id":749,"continuous":0}
                        attributes:
                          $ref: "https://raw.githubusercontent.com/booxmedialtd/api-documentation/master/snippets/UserRecordings/UserRecordingEntity.yml#UserRecordingEntity"
                  included:
                    type: array
                    description: >-
                      NOTE:  This endpoint will *always* include [Program] relationships and DOES NOT support the `included` parameter.
                    items:
                      type: object
                      description: "Note that different sorts of entity may be included (this array is not guaranteed to be homogenous), but the Swagger definition does not allow including more than one example of an item of an array so only one type is shown."
                      properties:
                        type:
                          type: string
                          example: Program
                          description: The type of the entity that is being included.  Each entry in the array will be one of [Program|PlayableStream] but both types will be included
                        id:
                          type: string
                          example: d0de0088-3141-439e-8455-839bdb8f6cec
                        attributes:
                            $ref: "https://raw.githubusercontent.com/booxmedialtd/api-documentation/master/snippets/EnrichedMetadata/ProgramEntity.yml#ProgramEntity"

        '400':
          description: Standard error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: "https://raw.githubusercontent.com/booxmedialtd/api-documentation/master/snippets/General/ErrorEntity.yml#Error"


    patch:
      tags:
      - Recordings
      summary: Update one or more attributes of an existing entity
      description: This can be used, for example, to reset the amount of time that a recording has been watched.
      operationId: modifyRecordings
      parameters:
        - in: path
          name: user_id
          description: The user id to obtain recordings for
          required: true
          schema:
            type: string
        - in: path
          name: epg_id
          description: The epg id to obtain recordings for
          required: true
          schema:
            type: string
        - in: path
          name: continuous
          description: "The integer value of the continuous flag"
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: >-
          The Recording entity to modify.  Note that you only have to provide the attributes that you want to change (this is a PATCH request) and that you cannot
          change the time that the recording expires.
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                data:
                  type: object
                  properties:
                    id:
                      type: integer
                    type:
                      type: string
                    attributes:
                      $ref: "https://raw.githubusercontent.com/booxmedialtd/api-documentation/master/snippets/UserRecordings/UserRecordingEntity.yml#UserRecordingEntity"

      responses:
        '200':
          description: "Successful response"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        description: "This will be a UserRecording entity"
                        example: UserRecording
                      id:
                        type: string
                        example: '{"user_id":1,"epg_id":749,"continuous":0}'
                      attributes:
                        $ref: "https://raw.githubusercontent.com/booxmedialtd/api-documentation/master/snippets/UserRecordings/UserRecordingEntity.yml#UserRecordingEntity"

        '400':
          description: Standard error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      $ref: "https://raw.githubusercontent.com/booxmedialtd/api-documentation/master/snippets/General/ErrorEntity.yml#Error"
