swagger: "2.0"
info:
  description: |
    A channel is a source of content in the form of stream or signal, which can be watched / listened on a multimedia device.
    A channel is one of the elements that users can subscribe to.
    One Channel can be related to many BroadcastSlots which are placeholders in which a Program can be displayed.
    Channels have a lifetime which we refer to as "visibility".  Outside of this window the channel may not be watched.
    Although conceptually we could create a channel that holds a single program (for example a live event) this is not done in practice.
  version: "1.0.0"
  title: "Channel endpoints"
host: "demo.aminocom.com"
basePath: "/api/schedule/v1/"
tags:
- name: "Channels"
  description: ""
schemes:
- "https"
paths:

  /channels:
    get:
      summary: "Get an index of Channels.  NOTE:  This endpoint will *always* include Genre relationships and DOES NOT support the `included` parameter."
      tags:
      - "Channels"
      operationId: "GetChannelIndex"
      produces:
      - "application/json"
      parameters:
      - in: query
        name: language
        type: string
        required: false
        description: "The PK of the language to use, which will be a 3 character ISO 639-2 string (e.g.: fin).  If this is omitted the browser 'Accept-Language' will be used if it is available, and otherwise the system defined default.  If the requested language is not available then the system will return translations in order of the system defined preferences"
      - in: query
        name: page_number
        type: integer
        required: false
        description: "The page number (100 results per page) of results to retrieve.  If this parameter is ommitted then it is assumed to be 1 (not zero based, 1 means the first page)"

      responses:
        200:
          description: "Successful response"
          schema:
            type: "object"
            required:
            - data
            properties:
              data:
                type: array
                items:
                  type: object
                  required:
                  - type
                  - id
                  properties:
                    type:
                      type: string
                      example: Channel
                    id:
                      type: string
                      description: "The id of the entity being referenced"
                      example: "89e3a147-2ff6-448f-959f-a6200434259d"
                    attributes:
                      $ref: "https://raw.githubusercontent.com/booxmedialtd/api-documentation/master/snippets/Schedule/ChannelEntity.yml#ChannelEntity"
              included:
                type: array
                description: "This key MUST NOT be included if the `included` parameter is not used in the request URL"
                items:
                  type: object
                  description: "Note that different sorts of entity may be included (this array is not guaranteed to be homogenous), but the Swagger definition does not allow including more than one example of an item of an array so only one type is shown."
                  properties:
                    type:
                      type: string
                      example: "Genre"
                      description: The type of the entity that is being included.
                    id:
                      type: string
                      example: "73079cf6-2b82-4ad1-8e45-727caf84298b"
                    attributes:
                        $ref: "https://raw.githubusercontent.com/booxmedialtd/api-documentation/master/snippets/EnrichedMetadata/GenreEntity.yml#GenreEntity"

  /user/{user_id}/user_favourite_channels:
    get:
      summary: "Get an index of the users favourite channels"
      tags:
      - "Channels"
      operationId: "GetUserFavouriteChannelIndex"
      produces:
      - "application/json"
      parameters:
      - in: url
        name: user_id
        type: string
        required: false
        description: "The user identifier"

      responses:
        200:
          description: "Successful response"
          schema:
            type: "object"
            required:
            - data
            properties:
              data:
                type: array
                items:
                  type: object
                  required:
                  - type
                  - id
                  properties:
                    type:
                      type: string
                      example: UserFavouriteChannel
                    id:
                      type: string
                      description: "The id of the channel that is selected as a favourite.  The identity of the value object is bound to its value."
                      example: "123"
                    attributes:
                      $ref: "https://raw.githubusercontent.com/booxmedialtd/api-documentation/master/snippets/Schedule/UserFavouriteChannelValueObject.yml#UserFavouriteChannelValueObject"
